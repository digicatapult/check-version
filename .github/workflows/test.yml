name: 'build-test'
on: # rebuild any PRs and main branch changes
  pull_request:
  push:

jobs:
  build: # make sure build/ci work properly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          npm install
      - run: |
          npm run all
  test: # make sure the action works on a clean machine without building
    runs-on: ubuntu-latest
    outputs:
      is_new_version: ${{ steps.get_version.outputs.IS_NEW_VERSION }}
      version: ${{ steps.get_version.outputs.VERSION }}
      build_date: ${{ steps.get_version.outputs.BUILD_DATE }}
      is_prerelease: ${{ steps.get_version.outputs.IS_PRERELEASE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Run my action
        id: get_version
        uses: ./
        with:
          milliseconds: 1000
          location: './__tests__/'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Skipping release as version has not increased
        if: steps.get_version.outputs.IS_NEW_VERSION != 'true'
        shell: bash
        run: |
          echo "Skipping release as current version has already been published"
      - name: Testing new version got registered
        run: |
          echo "::print me bool: ${{steps.get_version.outputs.IS_NEW_VERSION}}"
